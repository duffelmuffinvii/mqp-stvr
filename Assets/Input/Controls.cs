//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""98a2c1e5-a995-44e4-8c93-ea9da8050376"",
            ""actions"": [
                {
                    ""name"": ""LThumbX"",
                    ""type"": ""Value"",
                    ""id"": ""bc77e9e2-614e-477a-9681-3800ab313b72"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LThumbY"",
                    ""type"": ""Value"",
                    ""id"": ""d281339c-5d41-4fb5-8dfb-14d19cfdedf6"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RThumbX"",
                    ""type"": ""Value"",
                    ""id"": ""4108293e-8d24-4e0c-9bcc-2b97e4ac675b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RThumbY"",
                    ""type"": ""Value"",
                    ""id"": ""fd4c7b2b-8069-44ca-bc15-d85adb708d26"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""b148ba7a-f960-4238-a461-d2ecf0097c18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""07f7d5fd-4bc2-412e-b71f-cd8fba80be82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AButton"",
                    ""type"": ""Button"",
                    ""id"": ""75dc5b06-7641-44b2-908a-f2bf099418d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BButton"",
                    ""type"": ""Button"",
                    ""id"": ""651cce3f-8dd6-45b0-ad64-798b68f1319e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""376abf9f-d6e3-4fca-a8a4-6455c0e3cb7d"",
                    ""path"": ""<OculusTouchController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38e5037d-a525-46bb-8ee9-8ae2267f8a1a"",
                    ""path"": ""<OculusTouchController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f32699d1-438c-4459-9a7e-21bef7c97266"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LThumbX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57137034-0df4-4f21-b0d0-2c6a76abaa34"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LThumbX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""effbb5c4-1a2c-42ab-98fc-103e50b6015b"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LThumbY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8be67b35-17ae-413f-bd15-2b14f314249b"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LThumbY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""beac9a02-9379-4e7f-b6ad-b9873cbb4fa7"",
                    ""path"": ""<OculusTouchController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf1c6f63-16c9-4e94-b6dd-1e0009f91aa8"",
                    ""path"": ""<OculusTouchController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c829923-f7fe-4eb4-afdb-64803dc01649"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RThumbY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44d8d970-0a51-47bc-a000-57f8ac9ae296"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RThumbX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_LThumbX = m_Player.FindAction("LThumbX", throwIfNotFound: true);
        m_Player_LThumbY = m_Player.FindAction("LThumbY", throwIfNotFound: true);
        m_Player_RThumbX = m_Player.FindAction("RThumbX", throwIfNotFound: true);
        m_Player_RThumbY = m_Player.FindAction("RThumbY", throwIfNotFound: true);
        m_Player_LTrigger = m_Player.FindAction("LTrigger", throwIfNotFound: true);
        m_Player_RTrigger = m_Player.FindAction("RTrigger", throwIfNotFound: true);
        m_Player_AButton = m_Player.FindAction("AButton", throwIfNotFound: true);
        m_Player_BButton = m_Player.FindAction("BButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_LThumbX;
    private readonly InputAction m_Player_LThumbY;
    private readonly InputAction m_Player_RThumbX;
    private readonly InputAction m_Player_RThumbY;
    private readonly InputAction m_Player_LTrigger;
    private readonly InputAction m_Player_RTrigger;
    private readonly InputAction m_Player_AButton;
    private readonly InputAction m_Player_BButton;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LThumbX => m_Wrapper.m_Player_LThumbX;
        public InputAction @LThumbY => m_Wrapper.m_Player_LThumbY;
        public InputAction @RThumbX => m_Wrapper.m_Player_RThumbX;
        public InputAction @RThumbY => m_Wrapper.m_Player_RThumbY;
        public InputAction @LTrigger => m_Wrapper.m_Player_LTrigger;
        public InputAction @RTrigger => m_Wrapper.m_Player_RTrigger;
        public InputAction @AButton => m_Wrapper.m_Player_AButton;
        public InputAction @BButton => m_Wrapper.m_Player_BButton;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @LThumbX.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLThumbX;
                @LThumbX.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLThumbX;
                @LThumbX.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLThumbX;
                @LThumbY.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLThumbY;
                @LThumbY.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLThumbY;
                @LThumbY.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLThumbY;
                @RThumbX.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRThumbX;
                @RThumbX.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRThumbX;
                @RThumbX.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRThumbX;
                @RThumbY.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRThumbY;
                @RThumbY.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRThumbY;
                @RThumbY.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRThumbY;
                @LTrigger.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLTrigger;
                @LTrigger.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLTrigger;
                @LTrigger.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLTrigger;
                @RTrigger.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRTrigger;
                @RTrigger.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRTrigger;
                @RTrigger.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRTrigger;
                @AButton.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAButton;
                @AButton.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAButton;
                @AButton.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAButton;
                @BButton.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBButton;
                @BButton.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBButton;
                @BButton.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBButton;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LThumbX.started += instance.OnLThumbX;
                @LThumbX.performed += instance.OnLThumbX;
                @LThumbX.canceled += instance.OnLThumbX;
                @LThumbY.started += instance.OnLThumbY;
                @LThumbY.performed += instance.OnLThumbY;
                @LThumbY.canceled += instance.OnLThumbY;
                @RThumbX.started += instance.OnRThumbX;
                @RThumbX.performed += instance.OnRThumbX;
                @RThumbX.canceled += instance.OnRThumbX;
                @RThumbY.started += instance.OnRThumbY;
                @RThumbY.performed += instance.OnRThumbY;
                @RThumbY.canceled += instance.OnRThumbY;
                @LTrigger.started += instance.OnLTrigger;
                @LTrigger.performed += instance.OnLTrigger;
                @LTrigger.canceled += instance.OnLTrigger;
                @RTrigger.started += instance.OnRTrigger;
                @RTrigger.performed += instance.OnRTrigger;
                @RTrigger.canceled += instance.OnRTrigger;
                @AButton.started += instance.OnAButton;
                @AButton.performed += instance.OnAButton;
                @AButton.canceled += instance.OnAButton;
                @BButton.started += instance.OnBButton;
                @BButton.performed += instance.OnBButton;
                @BButton.canceled += instance.OnBButton;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnLThumbX(InputAction.CallbackContext context);
        void OnLThumbY(InputAction.CallbackContext context);
        void OnRThumbX(InputAction.CallbackContext context);
        void OnRThumbY(InputAction.CallbackContext context);
        void OnLTrigger(InputAction.CallbackContext context);
        void OnRTrigger(InputAction.CallbackContext context);
        void OnAButton(InputAction.CallbackContext context);
        void OnBButton(InputAction.CallbackContext context);
    }
}
